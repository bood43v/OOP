<!--Главное дерево;
    пространства имён-->
<Window x:Class="Hello_wpf.MainWindow" 
            
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hello_wpf"
        mc:Ignorable="d"
        Title="Шифр Цезаря" Height="450" Width="800"  FontFamily="Lucida Sans" FontSize="16"  ResizeMode="CanMinimize" Icon="/icon.ico">
    <!-- ResizeMode="CanMinimize" окно нельзя развернуть, только свернуть
    FontFamily - Шрифт -->
    <!-- Фон окна - градиент
    EndPoint="0.5,1" StartPoint="0.5,0" - направление градиента
    Значение 0,5 указывает на центр элемента управления по соответствующей оси координат, 
    а значения 0 и 1 указывают на верхнюю и нижнюю границы элемента
    
    Offset="0.9"
    Цветовая остановка находится на 90.% расстояния от начала градиента. 
    То есть, если градиент начинается с верхней границы элемента управления и заканчивается на нижней, 
    то цветовая остановка находится ближе к нижней границе, чем к верхней.-->
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="White"/>
            <GradientStop Color="#FFE4CE6A" Offset="0.907"/>
        </LinearGradientBrush>
    </Window.Background>

    <!-- Сетка для помещения в неё других элементов-->
    <Grid x:Name="MainGrid" >
        <!-- RowDefinition Height/Width высота строки и ширина столбца в сетке -->
        <Grid.RowDefinitions>
            <RowDefinition Height="230*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="230*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="250*"/>
        </Grid.ColumnDefinitions>

        <TextBox x:Name="TextBox1"   
                 TextWrapping="Wrap" 
                 AcceptsReturn="True"
                 VerticalScrollBarVisibility="Visible" 
                 Grid.Row="0" Grid.Column="0" 
                 Text="здесь может быть ваше сообщение" 
                 Grid.ColumnSpan="3" 
                 Margin="10,39,10,42" 
                 Grid.RowSpan="2"/>
        <!--TextWrapping = "Wrap" - екст должен автоматически переноситься на новую строку, 
        если он не помещается в одну строку-->
        
        <!--AcceptsReturn -о пределяет, разрешено ли пользователю вводить символ новой строки в текстовое поле 
        с помощью клавиши Enter.
        Если "True", то при нажатии клавиши Enter будет вставляться символ новой строки, а не перевод курсора на следующую строку, 
        Если же свойство AcceptsReturn установлено в значение "False", то при нажатии клавиши Enter будет происходить переход 
        к следующему элементу управления на форме или окне.-->
        
        <!--Grid.ColumnSpan/Grid.RowSpan - сколько столбцов/строк Grid занимает TextBox-->
        <!--Margin - размеры полей -->
        <TextBox x:Name="TextBoxResult" 
                 Grid.Row="1" 
                 Grid.Column="0" 
                 Text="" 
                 Grid.ColumnSpan="3" 
                 Margin="10,42,10,10" 
                 IsReadOnly="True"
                 Grid.RowSpan="2"/>
        <Button x:Name="Button" 
                Grid.Row="1" 
                Grid.Column="2" 
                Margin="50,5,10,5" 
                Content="Зашифровать" Click="ButtonToEncrypt_Click"/>
        <!--Click - обработчик событий -->
        <!--ComboBox - выпадающий список -->
        <!--VerticalContentAlignment - выравнивание текста в ComboBox-->
        <ComboBox x:Name="ComboBoxShift" 
                  Grid.Row="1" 
                  Grid.Column="1" 
                  Margin="80,5,80,5" 
                  SelectedIndex="0" 
                  VerticalContentAlignment="Center"/>

        <!--SelectedIndex - индекс выбранного элемента по стандарту-->
        <Label x:Name="LabelShift" 
               Content="Сдвиг" 
               HorizontalAlignment="Left" 
               Margin="10,0,0,0" 
               Grid.Row="1" 
               VerticalAlignment="Center" 
               Height="31" 
               Width="55" 
               Grid.Column="1"/>
        <!--Grid.Column/Grid.Row - в каком столбце/строке находится Label -->
        <Label x:Name="LabelOperation" 
               Content="Операция" 
               HorizontalAlignment="Left" 
               Margin="10,0,0,0" 
               Grid.Row="1" 
               VerticalAlignment="Center" 
               Height="30" 
               Width="100"/>
        <ComboBox x:Name="ComboBoxOperation" 
                  Grid.Row="1" 
                  Margin="110,5,5,5" 
                  SelectedIndex="0" 
                  VerticalContentAlignment="Center" SelectionChanged="ComboBoxOperation_SelectionChanged">
            <!-- ComboBoxOperation_SelectionChanged - обработчик на изменение элемента в ComboBox -->
            <ComboBoxItem Content="Зашифровать"/>
            <ComboBoxItem Content="Расшифровать"/>
        </ComboBox>
        <Label x:Name="Label1" 
               Content="Текст для кодирования" 
               Margin="10,5,5,150">
        </Label>
        <Button Content="↓↑" 
                Grid.Column="1" 
                Margin="200,6,6,6" 
                Grid.Row="1" 
                Click="Button_Click"/>
    </Grid>
</Window>
